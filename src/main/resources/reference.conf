#
# HOCON-standard Linter configuration to control which Lint checks to run 
# For syntax help, @see https://github.com/typesafehub/config
#
linter {

    #
    # EqualsEquals comparison check on objects of different types
    #
    eqeq {
        # Set to true to have linter check for using "==" on different types
        checkEnabled=true

        # What level of severity to apply to a failed Lint check (one of "warn" or "error")
        severity="error"
    }

    #
    # Wildcard package import control - controls warnings related to importing foo.bar._
    #
    package.wildcard {

        whitelist {
            # Set to true to have linter check and squawk on the use of wildcard imports
            checkEnabled=true
            
            # Comma-separated list of packages to allow for wildcard importing
            packages=[]

            # What level of severity to apply to a failed Lint check for this test (one of "warn" or "error")
            severity="warn"
        }

        #  === TODO === respect me in the morning (these conf settings are ignored by the plugin)
        blacklist {
            # Set to true to check for a blacklist wildcard import, regardless of the "disallow" setting
            disallowBlacklist=true
            
            # Comma-separated list of packages in the blacklist
            blacklist=["scala.collections.JavaConversions"]
        }
    }

    #
    # Sequence/Collection related checks
    #
    seq {
        # Checks for Seq.contains calls with different types
        contains {
            # Set to true to check for use of a Seq[A].contains(B) call where A & B are different types
            checkEnabled=true

            # What level of severity to apply to a failed check (one of "warn" or "error")
            severity=warn
        }
    }
}
